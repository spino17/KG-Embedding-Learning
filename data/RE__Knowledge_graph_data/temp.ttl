@prefix ns: <NS/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ns:Program ns:hasBBList ns:BasicBlocks ;
    ns:hasCFPS ns:CFPS ;
    ns:hasDFPS ns:DFPS ;
    ns:hasID "5"^^xsd:string ;
    ns:startNodeId "1"^^xsd:string .

<NS/-1029181836876104006> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 7 .

<NS/-2310738954856526637> ns:hasExpression "a"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/-1241453560907015244> ] .

<NS/-235731468895400810> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 5 ;
    ns:hasDataUsageNodeId 5 ;
    ns:hasId 3 .

<NS/-3154518603735226387> ns:hasExpression "a[i] % val"^^xsd:string ;
    ns:hasStatementSideType 3 ;
    ns:hasStatementSideTypeStr "StatementSideType.Expression"^^xsd:string .

<NS/-3169592703602853279> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 2 ;
    ns:hasId 4 .

<NS/-3700586683103926344> ns:hasExpression "a"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/-3314880601120706255> ] .

<NS/-4402061236586221283> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 8 .

<NS/-4799007132934088741> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 11 .

<NS/-4994317315341472955> ns:hasIndexVariableName "i"^^xsd:string .

<NS/-5493996699075553097> ns:hasArrayDetails <NS/-4994317315341472955> ;
    ns:hasValue "a"^^xsd:string .

<NS/-65754788237095324> ns:hasExpression "2"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "2"^^xsd:string .

<NS/-7533934882936111409> ns:hasExpression "nice"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "nice"^^xsd:string .

<NS/-8007001558045738935> ns:hasValue "a"^^xsd:string .

<NS/1219472591247820880> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 6 ;
    ns:hasId 12 .

<NS/1838548628737637307> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 5 .

<NS/2707648666252711641> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 2 .

<NS/2726265002127728174> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasId 13 .

<NS/301325393012674095> ns:hasExpression "b"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/4546934044235257076> ] .

<NS/382003454695830782> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 4 ;
    ns:hasId 10 .

<NS/4748701369717623451> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 9 .

<NS/5684537456428048698> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 5 ;
    ns:hasDataUsageNodeId 5 ;
    ns:hasId 6 .

<NS/7374139660287587525> ns:hasExpression "1"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "1"^^xsd:string .

<NS/8486108179545691731> ns:hasExpression "[1, 2, 3, 4, 5]"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValues [ ns:hasValue "[2, 'DataType.Integer', '1']"^^xsd:string,
                "[2, 'DataType.Integer', '2']"^^xsd:string,
                "[2, 'DataType.Integer', '3']"^^xsd:string,
                "[2, 'DataType.Integer', '4']"^^xsd:string,
                "[2, 'DataType.Integer', '5']"^^xsd:string ] .

<NS/8758920791657783811> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasId 14 .

<NS/973400981335841462> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 2 ;
    ns:hasId 1 .

ns:BasicBlocks ns:hasBB <NS/1>,
        <NS/2>,
        <NS/3>,
        <NS/4>,
        <NS/5>,
        <NS/6>,
        <NS/7> .

ns:CFPS ns:hasPath [ ns:Path [ ns:nextBlock <NS/1> ] ;
            ns:hasID 2 ],
        [ ns:Path [ ns:nextBlock <NS/1> ] ;
            ns:hasID 1 ] .

ns:DFPS ns:hasVarInfo ns:a,
        ns:b,
        ns:i,
        ns:val .

ns:a ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-3169592703602853279>,
                                <NS/1838548628737637307>,
                                <NS/2707648666252711641>,
                                <NS/973400981335841462> ] ;
                    ns:hasVarInfo <NS/-1241453560907015244> ],
                [ ns:hasDUPairs [ ns:hasDUPair <NS/-235731468895400810>,
                                <NS/5684537456428048698> ] ;
                    ns:hasVarInfo <NS/-3314880601120706255> ] ] ;
    ns:hasValue "a"^^xsd:string .

ns:b ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/2726265002127728174>,
                                <NS/8758920791657783811> ] ;
                    ns:hasVarInfo <NS/4546934044235257076> ] ] ;
    ns:hasValue "b"^^xsd:string .

ns:i ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-1029181836876104006>,
                                <NS/-4402061236586221283> ] ;
                    ns:hasVarInfo <NS/-6251461440134778019> ] ] ;
    ns:hasValue "i"^^xsd:string .

ns:stmtAtLine1 ns:hasBlockLineNo 1 ;
    ns:hasLHSs [ ns:hasLHS <NS/-2310738954856526637> ] ;
    ns:hasLineNo 1 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/8486108179545691731> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-1241453560907015244> ] ;
    ns:stmtString "a = [1, 2, 3, 4, 5]"^^xsd:string .

ns:stmtAtLine10 ns:hasBlockLineNo 3 ;
    ns:hasLineNo 10 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/-3314880601120706255> ] ;
    ns:stmtString "print(a)"^^xsd:string .

ns:stmtAtLine11 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 11 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:stmtString "print('outside loop')"^^xsd:string .

ns:stmtAtLine2 ns:hasBlockLineNo 2 ;
    ns:hasLHSs [ ns:hasLHS <NS/301325393012674095> ] ;
    ns:hasLineNo 2 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/-65754788237095324> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/4546934044235257076> ] ;
    ns:stmtString "b = 2"^^xsd:string .

ns:stmtAtLine3 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 3 ;
    ns:hasStmtType 3 ;
    ns:hasStmtTypeStr "StatementType.Loop"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-6251461440134778019>,
                <NS/6324760750195709986> ] ;
    ns:hasVarUses [ ns:hasVarUse <NS/-8007001558045738935> ] ;
    ns:stmtString "for i, val in enumerate(a):"^^xsd:string .

ns:stmtAtLine4 ns:hasBlockLineNo 1 ;
    ns:hasLHS <NS/-3154518603735226387> ;
    ns:hasLineNo 4 ;
    ns:hasOperator 16 ;
    ns:hasOperatorStr "Operator.Eq"^^xsd:string ;
    ns:hasRHS <NS/7374139660287587525> ;
    ns:hasStmtType 2 ;
    ns:hasStmtTypeStr "StatementType.Condition"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/-5493996699075553097>,
                <NS/-6251461440134778019>,
                <NS/6324760750195709986> ] ;
    ns:stmtString "if a[i] % val == 1:"^^xsd:string .

ns:stmtAtLine5 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 5 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/6324760750195709986> ] ;
    ns:stmtString "print('odd number ', val)"^^xsd:string .

ns:stmtAtLine7 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 7 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/6324760750195709986> ] ;
    ns:stmtString "print('even number ', val)"^^xsd:string .

ns:stmtAtLine8 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 8 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:stmtString "print('extra')"^^xsd:string .

ns:stmtAtLine9 ns:hasBlockLineNo 2 ;
    ns:hasLHSs [ ns:hasLHS <NS/-3700586683103926344> ] ;
    ns:hasLineNo 9 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/-7533934882936111409> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-3314880601120706255> ] ;
    ns:stmtString "a = 'nice'"^^xsd:string .

ns:val ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-4799007132934088741>,
                                <NS/1219472591247820880>,
                                <NS/382003454695830782>,
                                <NS/4748701369717623451> ] ;
                    ns:hasVarInfo <NS/6324760750195709986> ] ] ;
    ns:hasValue "val"^^xsd:string .

<NS/-1241453560907015244> ns:hasDataType 5 ;
    ns:hasDataTypeStr "DataType.List"^^xsd:string ;
    ns:hasValue "a"^^xsd:string .

<NS/-6251461440134778019> ns:hasValue "i"^^xsd:string .

<NS/4546934044235257076> ns:hasDataType 2 ;
    ns:hasDataTypeStr "DataType.Integer"^^xsd:string ;
    ns:hasMaxValue "9.223372036854776e+18"^^xsd:float ;
    ns:hasMinValue "-9.223372036854776e+18"^^xsd:float ;
    ns:hasValue "b"^^xsd:string .

<NS/7> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "7"^^xsd:string ;
    ns:hasPredecessor <NS/5> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine11 ] .

<NS/-3314880601120706255> ns:hasDataType 9 ;
    ns:hasDataTypeStr "DataType.String"^^xsd:string ;
    ns:hasValue "a"^^xsd:string .

<NS/1> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "1"^^xsd:string ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine1,
                ns:stmtAtLine2 ] ;
    ns:hasSuccessor <NS/2> ;
    ns:nextBlock <NS/2> .

<NS/4> ns:hasBlkCtgry ns:BLKCTGRY3 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalTrue ;
    ns:hasID "4"^^xsd:string ;
    ns:hasPredecessor <NS/3> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine5 ] ;
    ns:hasSuccessor <NS/5> ;
    ns:nextBlock <NS/5> .

<NS/6> ns:hasBlkCtgry ns:BLKCTGRY4 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalFalse ;
    ns:hasID "6"^^xsd:string ;
    ns:hasPredecessor <NS/3> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine7 ] ;
    ns:hasSuccessor <NS/5> ;
    ns:nextBlock <NS/5> .

<NS/2> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "2"^^xsd:string ;
    ns:hasPredecessor <NS/1>,
        <NS/5> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine3 ] ;
    ns:hasSuccessor <NS/3> ;
    ns:nextBlock <NS/3> .

<NS/3> ns:hasBlkCtgry ns:BLKCTGRY2 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalIf ;
    ns:hasID "3"^^xsd:string ;
    ns:hasPredecessor <NS/2> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine4 ] ;
    ns:hasSuccessor <NS/4>,
        <NS/6> ;
    ns:nextBlock <NS/4>,
        <NS/6> .

<NS/6324760750195709986> ns:hasValue "val"^^xsd:string .

<NS/5> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "5"^^xsd:string ;
    ns:hasPredecessor <NS/4>,
        <NS/6> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine10,
                ns:stmtAtLine8,
                ns:stmtAtLine9 ] ;
    ns:hasSuccessor <NS/2>,
        <NS/7> ;
    ns:nextBlock <NS/7> .

