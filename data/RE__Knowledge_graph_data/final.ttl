@prefix ns: <NS/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ns:Program ns:hasBBList ns:BasicBlocks ;
    ns:hasCFPS ns:CFPS ;
    ns:hasDFPS ns:DFPS ;
    ns:hasID "5"^^xsd:string ;
    ns:startNodeId "1"^^xsd:string .

<NS/-1034889432157024183> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 4 ;
    ns:hasId 10 .

<NS/-1191771590138830543> ns:hasExpression "a[i] % val"^^xsd:string ;
    ns:hasStatementSideType 3 ;
    ns:hasStatementSideTypeStr "StatementSideType.Expression"^^xsd:string .

<NS/-1904476524596539316> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasId 14 .

<NS/-2185460027255683919> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 8 .

<NS/-3339288421585925956> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 9 .

<NS/-3605668555248670999> ns:hasExpression "[1, 2, 3, 4, 5]"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValues [ ns:hasValue "[2, 'DataType.Integer', '1']"^^xsd:string,
                "[2, 'DataType.Integer', '2']"^^xsd:string,
                "[2, 'DataType.Integer', '3']"^^xsd:string,
                "[2, 'DataType.Integer', '4']"^^xsd:string,
                "[2, 'DataType.Integer', '5']"^^xsd:string ] .

<NS/-3705829263498141843> ns:hasIndexVariableName "i"^^xsd:string .

<NS/-417887722231572354> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 6 ;
    ns:hasId 12 .

<NS/-5652019533995653985> ns:hasExpression "b"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/-3115100842091728209> ] .

<NS/-8507628282756389615> ns:hasExpression "2"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "2"^^xsd:string .

<NS/-993316141814360460> ns:hasExpression "a"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/4290026105355187733> ] .

<NS/1797482347951268964> ns:hasExpression "1"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "1"^^xsd:string .

<NS/2282142217603932869> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 11 .

<NS/2494591465945601490> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 2 ;
    ns:hasId 4 .

<NS/2704045217925344560> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 2 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 7 .

<NS/3497940475221433456> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 5 .

<NS/4265558121349719898> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 5 ;
    ns:hasDataUsageNodeId 5 ;
    ns:hasId 3 .

<NS/4469638452387223924> ns:hasValue "a"^^xsd:string .

<NS/4879285651921857078> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasId 13 .

<NS/5050664608189431756> ns:hasExpression "a"^^xsd:string ;
    ns:hasStatementSideType 1 ;
    ns:hasStatementSideTypeStr "StatementSideType.Variable"^^xsd:string ;
    ns:hasVarUses [ ns:hasVarUse <NS/-1015103063619618490> ] .

<NS/5432937816718917082> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 2 ;
    ns:hasId 1 .

<NS/725161288733926988> ns:hasArrayDetails <NS/-3705829263498141843> ;
    ns:hasValue "a"^^xsd:string .

<NS/877977600078736514> ns:hasExpression "nice"^^xsd:string ;
    ns:hasStatementSideType 2 ;
    ns:hasStatementSideTypeStr "StatementSideType.Constant"^^xsd:string ;
    ns:hasValue "nice"^^xsd:string .

<NS/9035269579732406950> ns:hasControlFlowPathId 2 ;
    ns:hasDataDefinitionNodeId 5 ;
    ns:hasDataUsageNodeId 5 ;
    ns:hasId 6 .

<NS/9184283664702354154> ns:hasControlFlowPathId 1 ;
    ns:hasDataDefinitionNodeId 1 ;
    ns:hasDataUsageNodeId 3 ;
    ns:hasId 2 .

ns:BasicBlocks ns:hasBB <NS/1>,
        <NS/2>,
        <NS/3>,
        <NS/4>,
        <NS/5>,
        <NS/6>,
        <NS/7> .

ns:CFPS ns:hasPath [ ns:Path [ ns:nextBlock <NS/1> ] ;
            ns:hasID 1 ],
        [ ns:Path [ ns:nextBlock <NS/1> ] ;
            ns:hasID 2 ] .

ns:DFPS ns:hasVarInfo ns:a,
        ns:b,
        ns:i,
        ns:val .

ns:a ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/4265558121349719898>,
                                <NS/9035269579732406950> ] ;
                    ns:hasVarInfo <NS/4290026105355187733> ],
                [ ns:hasDUPairs [ ns:hasDUPair <NS/2494591465945601490>,
                                <NS/3497940475221433456>,
                                <NS/5432937816718917082>,
                                <NS/9184283664702354154> ] ;
                    ns:hasVarInfo <NS/-1015103063619618490> ] ] ;
    ns:hasValue "a"^^xsd:string .

ns:b ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-1904476524596539316>,
                                <NS/4879285651921857078> ] ;
                    ns:hasVarInfo <NS/-3115100842091728209> ] ] ;
    ns:hasValue "b"^^xsd:string .

ns:i ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-2185460027255683919>,
                                <NS/2704045217925344560> ] ;
                    ns:hasVarInfo <NS/-1904793223700111618> ] ] ;
    ns:hasValue "i"^^xsd:string .

ns:stmtAtLine1 ns:hasBlockLineNo 1 ;
    ns:hasLHSs [ ns:hasLHS <NS/5050664608189431756> ] ;
    ns:hasLineNo 1 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/-3605668555248670999> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-1015103063619618490> ] ;
    ns:stmtString "a = [1, 2, 3, 4, 5]"^^xsd:string .

ns:stmtAtLine10 ns:hasBlockLineNo 3 ;
    ns:hasLineNo 10 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/4290026105355187733> ] ;
    ns:stmtString "print(a)"^^xsd:string .

ns:stmtAtLine11 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 11 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:stmtString "print('outside loop')"^^xsd:string .

ns:stmtAtLine2 ns:hasBlockLineNo 2 ;
    ns:hasLHSs [ ns:hasLHS <NS/-5652019533995653985> ] ;
    ns:hasLineNo 2 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/-8507628282756389615> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-3115100842091728209> ] ;
    ns:stmtString "b = 2"^^xsd:string .

ns:stmtAtLine3 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 3 ;
    ns:hasStmtType 3 ;
    ns:hasStmtTypeStr "StatementType.Loop"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/-1275838802470672304>,
                <NS/-1904793223700111618> ] ;
    ns:hasVarUses [ ns:hasVarUse <NS/4469638452387223924> ] ;
    ns:stmtString "for i, val in enumerate(a):"^^xsd:string .

ns:stmtAtLine4 ns:hasBlockLineNo 1 ;
    ns:hasLHS <NS/-1191771590138830543> ;
    ns:hasLineNo 4 ;
    ns:hasOperator 16 ;
    ns:hasOperatorStr "Operator.Eq"^^xsd:string ;
    ns:hasRHS <NS/1797482347951268964> ;
    ns:hasStmtType 2 ;
    ns:hasStmtTypeStr "StatementType.Condition"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/-1275838802470672304>,
                <NS/-1904793223700111618>,
                <NS/725161288733926988> ] ;
    ns:stmtString "if a[i] % val == 1:"^^xsd:string .

ns:stmtAtLine5 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 5 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/-1275838802470672304> ] ;
    ns:stmtString "print('odd number ', val)"^^xsd:string .

ns:stmtAtLine7 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 7 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarUses [ ns:hasVarUse <NS/-1275838802470672304> ] ;
    ns:stmtString "print('even number ', val)"^^xsd:string .

ns:stmtAtLine8 ns:hasBlockLineNo 1 ;
    ns:hasLineNo 8 ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:stmtString "print('extra')"^^xsd:string .

ns:stmtAtLine9 ns:hasBlockLineNo 2 ;
    ns:hasLHSs [ ns:hasLHS <NS/-993316141814360460> ] ;
    ns:hasLineNo 9 ;
    ns:hasOperator 26 ;
    ns:hasOperatorStr "Operator.Assign"^^xsd:string ;
    ns:hasRHS <NS/877977600078736514> ;
    ns:hasStmtType 1 ;
    ns:hasStmtTypeStr "StatementType.Expression"^^xsd:integer ;
    ns:hasVarDefs [ ns:hasVarDef <NS/4290026105355187733> ] ;
    ns:stmtString "a = 'nice'"^^xsd:string .

ns:val ns:hasInstances [ ns:hasInstance [ ns:hasDUPairs [ ns:hasDUPair <NS/-1034889432157024183>,
                                <NS/-3339288421585925956>,
                                <NS/-417887722231572354>,
                                <NS/2282142217603932869> ] ;
                    ns:hasVarInfo <NS/-1275838802470672304> ] ] ;
    ns:hasValue "val"^^xsd:string .

<NS/-1015103063619618490> ns:hasDataType 5 ;
    ns:hasDataTypeStr "DataType.List"^^xsd:string ;
    ns:hasValue "a"^^xsd:string .

<NS/-1904793223700111618> ns:hasValue "i"^^xsd:string .

<NS/-3115100842091728209> ns:hasDataType 2 ;
    ns:hasDataTypeStr "DataType.Integer"^^xsd:string ;
    ns:hasMaxValue "9.223372036854776e+18"^^xsd:float ;
    ns:hasMinValue "-9.223372036854776e+18"^^xsd:float ;
    ns:hasValue "b"^^xsd:string .

<NS/7> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "7"^^xsd:string ;
    ns:hasPredecessor <NS/5> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine11 ] .

<NS/1> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "1"^^xsd:string ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine1,
                ns:stmtAtLine2 ] ;
    ns:hasSuccessor <NS/2> ;
    ns:nextBlock <NS/2> .

<NS/4> ns:hasBlkCtgry ns:BLKCTGRY3 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalTrue ;
    ns:hasID "4"^^xsd:string ;
    ns:hasPredecessor <NS/3> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine5 ] ;
    ns:hasSuccessor <NS/5> ;
    ns:nextBlock <NS/5> .

<NS/4290026105355187733> ns:hasDataType 9 ;
    ns:hasDataTypeStr "DataType.String"^^xsd:string ;
    ns:hasValue "a"^^xsd:string .

<NS/6> ns:hasBlkCtgry ns:BLKCTGRY4 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalFalse ;
    ns:hasID "6"^^xsd:string ;
    ns:hasPredecessor <NS/3> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine7 ] ;
    ns:hasSuccessor <NS/5> ;
    ns:nextBlock <NS/5> .

<NS/-1275838802470672304> ns:hasValue "val"^^xsd:string .

<NS/2> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "2"^^xsd:string ;
    ns:hasPredecessor <NS/1>,
        <NS/5> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine3 ] ;
    ns:hasSuccessor <NS/3> ;
    ns:nextBlock <NS/3> .

<NS/3> ns:hasBlkCtgry ns:BLKCTGRY2 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.ConditionalIf ;
    ns:hasID "3"^^xsd:string ;
    ns:hasPredecessor <NS/2> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine4 ] ;
    ns:hasSuccessor <NS/4>,
        <NS/6> ;
    ns:nextBlock <NS/4>,
        <NS/6> .

<NS/5> ns:hasBlkCtgry ns:BLKCTGRY1 ;
    ns:hasBlkCtgryStr ns:BLKCTGRYSTRBlockCategory.NONE ;
    ns:hasID "5"^^xsd:string ;
    ns:hasPredecessor <NS/4>,
        <NS/6> ;
    ns:hasStmtList [ ns:hasStmt ns:stmtAtLine10,
                ns:stmtAtLine8,
                ns:stmtAtLine9 ] ;
    ns:hasSuccessor <NS/2>,
        <NS/7> ;
    ns:nextBlock <NS/7> .

